admin:
  access_log_path: "/dev/null"
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

node:
  id: your_node_id_here
  cluster: your_cluster_name_here

static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: 10000 }
      filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              route_config:
                name: microservice_route
                virtual_hosts:
                  - name: microservice
                    domains: ["*"]
                    routes:
                      - match: { prefix: "/" }
                        route: { cluster: microservice }
        
              http_filters:
                - name: envoy.filters.http.jwt_authn
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                    providers:
                      jwt_provider:
                        payload_in_metadata: "my_payload"
                        local_jwks:
                          inline_string: '{"keys": [{"kty": "oct", "k": "test"}]}'
                    rules:
                      - match:
                          prefix: "/"
                        requires:
                          provider_name: "jwt_provider"
                - name: envoy.filters.http.rbac 
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
                    rules: 
                      action: ALLOW
                      policies:
                        "general-rules":
                          permissions:
                          - any: true
                          principals:
                          - metadata:
                              filter: envoy.filters.http.jwt_authn
                              path:
                              - key: my_payload
                              - key: groups
                              value:
                                list_match:
                                  one_of:
                                    string_match:
                                      exact: testGroup
                
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                

  clusters:
    - name: microservice
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: round_robin
      load_assignment:
        cluster_name: microservice
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: microservice
                      port_value: 80
