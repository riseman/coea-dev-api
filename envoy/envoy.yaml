admin:
  address:
    socket_address: { address: 0.0.0.0, port_value: 9902 }

static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: 10000 }
      
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: virtual_host
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route: { cluster: cluster_0 }

                http_filters:
                  - name: envoy.filters.http.JwtAuthentication
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      providers:
                        provider_0:
                          remote_jwks:
                            http_uri:
                              uri: /auth/realms/myrealm/protocol/openid-connect/certs
                              cluster: cluster_1
                              timeout: 1s
                      rules:
                        - match: { prefix: / }
                          requires: { provider_name: provider_0 }

                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: cluster_0
      type: LOGICAL_DNS
      connect_timeout: 0.25s
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: resourceserver_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: resourceserver, port_value: 80 }

    - name: cluster_1
      type: LOGICAL_DNS
      connect_timeout: 500s
      load_assignment:
        cluster_name: authserver_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: authserver, port_value: 8080 }
